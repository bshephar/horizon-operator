// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/openstack-k8s-operators/horizon-operator/controllers (interfaces: OkoPodInterface)

// Package mock_controllers is a generated GoMock package.
package controllers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	helper "github.com/openstack-k8s-operators/lib-common/modules/common/helper"
)

// MockOkoPodInterface is a mock of OkoPodInterface interface.
type MockOkoPodInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOkoPodInterfaceMockRecorder
}

// MockOkoPodInterfaceMockRecorder is the mock recorder for MockOkoPodInterface.
type MockOkoPodInterfaceMockRecorder struct {
	mock *MockOkoPodInterface
}

// NewMockOkoPodInterface creates a new mock instance.
func NewMockOkoPodInterface(ctrl *gomock.Controller) *MockOkoPodInterface {
	mock := &MockOkoPodInterface{ctrl: ctrl}
	mock.recorder = &MockOkoPodInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOkoPodInterface) EXPECT() *MockOkoPodInterfaceMockRecorder {
	return m.recorder
}

// GetPodFQDNList mocks base method.
func (m *MockOkoPodInterface) GetPodFQDNList(arg0 context.Context, arg1 *helper.Helper, arg2 string, arg3 map[string]string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPodFQDNList", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPodFQDNList indicates an expected call of GetPodFQDNList.
func (mr *MockOkoPodInterfaceMockRecorder) GetPodFQDNList(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPodFQDNList", reflect.TypeOf((*MockOkoPodInterface)(nil).GetPodFQDNList), arg0, arg1, arg2, arg3)
}
